<Window x:Class="Employment.WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Employment.WPF"
        xmlns:viewModels="clr-namespace:Employment.WPF.ViewModels"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        Title="MainWindow" Height="900" Width="1600">

    <Window.DataContext>
        <viewModels:MainViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <Style TargetType="{x:Type TextBlock}" x:Key="WrapText">
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
        </Style>
        <Style TargetType="DataGridColumnHeader" x:Key="WrapTextHeader">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
        </Style>
    </Window.Resources>    
    
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding MainMenuViewModel.LoadMainWindowCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="10*" MaxHeight="500"/>
            <!--<RowDefinition Height="20*" MaxHeight="500"/>-->
            <RowDefinition Height="15*" MaxHeight="500"/>
            <RowDefinition Height="100*" MaxHeight="5000"/>
            <RowDefinition Height="100*" MaxHeight="5000"/>
            <RowDefinition Height="100*" MaxHeight="500"/>
            <RowDefinition Height="10*" MaxHeight="500"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="10*" MaxWidth="4000"/>
            <ColumnDefinition Width="150*" MaxWidth="4000"/>
            <ColumnDefinition Width="150*" MaxWidth="4000"/>
            <ColumnDefinition Width="150*" MaxWidth="4000"/>
            <ColumnDefinition Width="10*" MaxWidth="4000"/>
        </Grid.ColumnDefinitions>

        <Menu Height="25" VerticalAlignment="Top" Grid.ColumnSpan="5">
            <MenuItem Header="Сервис" >
                <MenuItem Header="Настройки" Command="{Binding OptionsViewModel.OpenOption}">
                </MenuItem>
                <MenuItem Header="Работа с подразделениями">
                    <MenuItem Header="Добавить новое" Command="{Binding WorkWithDatabaseViewModel.SelectAddCommand}">
                    </MenuItem>
                    <MenuItem Header="Редактировать выбранное" Command="{Binding BranchesViewModel.EditCommand}">
                    </MenuItem>
                    <Separator></Separator>
                    <MenuItem Header="Удалить выбранное" Command="{Binding BranchesViewModel.RemoveCommand}">
                    </MenuItem>
                </MenuItem>
                <Separator></Separator>
                <MenuItem Header="Отчеты">
                    <MenuItem Header="Список предприятий по должности" Command="{Binding EmploymentViewModel.LoadCompaniesWithVacanciesForPositionCommand}">
                        
                    </MenuItem>
                    <MenuItem Header="Самая популярная должность по дате" Command="{Binding EmploymentViewModel.LoadTopPositionByVacanciesForPeriodCommand}">

                    </MenuItem>
                    <MenuItem Header="Вакансии без образования по дате">

                    </MenuItem>
                </MenuItem>
                <Separator></Separator>
                <MenuItem Header="Заменить директора" Command="{Binding DirectorWindowViewModel.DirectorsCommand}">
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Справка" Click="MenuItem_Click" >
            </MenuItem>
            <MenuItem Header="Выход" Click="MenuItem_Click_1" >
            </MenuItem>
        </Menu>

        <ComboBox x:Name="companyCb"
                  Background="#FFA9D1F4" Grid.Row="1" Grid.Column="1"
                  ItemsSource="{Binding CompaniesViewModel.Companies, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  SelectedItem="{Binding CompaniesViewModel.SelectedCompany, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  Height="30" VerticalAlignment="Center"
                  FontSize="20" Margin="10,0,10,0">

            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Path=Name}"/>
                </DataTemplate>
            </ComboBox.ItemTemplate>

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding VacancyViewModel.LoadVacanciesCommand}" CommandParameter="{Binding ElementName=companyCb, Path=SelectedItem}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>

        </ComboBox>

        <!--<DataGrid 
            Grid.Row="2"
            Grid.RowSpan="4"
            Grid.Column="1"
            Grid.ColumnSpan="3"
            
            ItemsSource="{Binding VacancyViewModel.Vacancies}"
                  >
            
        </DataGrid>-->

        <StackPanel  Orientation="Horizontal" Grid.Row="1" Grid.Column="3">
            <Button Command="{Binding MainWindowViewModel.ShowGameWindowCommand}" 
                     CommandParameter="{Binding}"
                     Content="Добавить"
                     Margin="5 5 5 5" 
                     HorizontalAlignment="Left" Width="136">
            </Button>
            <Button Command="{Binding MainWindowViewModel.RemoveGameCommand}"
                     Content="Удалить" Margin="5 5 5 5" HorizontalAlignment="Left" Width="136">
            </Button>
            <Button Command="{Binding MainWindowViewModel.ShowGameWindowUpdateCommand}" 
                     CommandParameter="{Binding}"
                     Content="Редактировать" Margin="5 5 5 5" HorizontalAlignment="Left" Width="136">
            </Button>
        </StackPanel>

        <DataGrid x:Name="vacancyGrid" 
                  AutoGenerateColumns="False"
                  FontSize="20" 
                  IsReadOnly="True"
                  Margin="10"
                  Grid.Row="2"
                  Grid.RowSpan="4"
                  Grid.Column="1"
                  Grid.ColumnSpan="3"
                  VirtualizingPanel.ScrollUnit="Item" 
                  VirtualizingPanel.IsVirtualizing="True"
                  ItemsSource="{Binding VacancyViewModel.Vacancies, UpdateSourceTrigger=PropertyChanged}">
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="Height" Value="80"/>
                    <Setter Property="Height" Value="Auto"/>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Название"
                    Binding="{Binding Name}"
                    Width="30*"
                    MinWidth="40"
                    ElementStyle="{StaticResource WrapText}" 
                    HeaderStyle="{StaticResource WrapTextHeader}"/>

                <DataGridTextColumn Header="Т.К."
                    Binding="{Binding WorkBookRegistration}"
                    Width="10*"
                    MinWidth="50"
                    ElementStyle="{StaticResource WrapText}" 
                    HeaderStyle="{StaticResource WrapTextHeader}"/>

                <DataGridTextColumn Header="Соц. пакет" 
                    Binding="{Binding SocialPackage}"
                    Width="20*" 
                    MinWidth="80"
                    ElementStyle="{StaticResource WrapText}" 
                    HeaderStyle="{StaticResource WrapTextHeader}"/>

                <DataGridTextColumn Header="Пол" 
                    Binding="{Binding Gender}"
                    Width="20*" 
                    MinWidth="80"
                    ElementStyle="{StaticResource WrapText}" 
                    HeaderStyle="{StaticResource WrapTextHeader}"/>

                <DataGridTextColumn Header="Возраст" 
                    Binding="{Binding AgeRange}"
                    Width="20*" 
                    MinWidth="80"
                    ElementStyle="{StaticResource WrapText}" 
                    HeaderStyle="{StaticResource WrapTextHeader}"/>

                <DataGridTextColumn Header="Зарплата" 
                    Binding="{Binding SalaryRange}"
                    Width="20*" 
                    MinWidth="100"
                    ElementStyle="{StaticResource WrapText}" 
                    HeaderStyle="{StaticResource WrapTextHeader}"/>

                <DataGridTextColumn Header="Образование" 
                    Binding="{Binding Education}"
                    Width="20*" 
                    MinWidth="115"
                    ElementStyle="{StaticResource WrapText}" 
                    HeaderStyle="{StaticResource WrapTextHeader}"/>

                <DataGridTextColumn Header="Должность" 
                    Binding="{Binding Position}"
                    Width="20*" 
                    MinWidth="115"
                    ElementStyle="{StaticResource WrapText}" 
                    HeaderStyle="{StaticResource WrapTextHeader}"/>

                <DataGridTemplateColumn Header="Навыки" HeaderStyle="{StaticResource WrapTextHeader}" MinWidth="200">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ListBox ItemsSource="{Binding Skills, UpdateSourceTrigger=PropertyChanged, TargetNullValue='отсутсвует'}" 
                                     ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                <ListBox.ItemContainerStyle>
                                    <Style>
                                        <Setter Property="ListBoxItem.Background" Value="AliceBlue"/>
                                        <Setter Property="ListBoxItem.Margin" Value="2"/>
                                        <Setter Property="ListBoxItem.Padding" Value="1"/>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Name,TargetNullValue='отсутсвует'}" TextWrapping="Wrap"/>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Обязанности" HeaderStyle="{StaticResource WrapTextHeader}" MinWidth="200">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ListBox ItemsSource="{Binding Responsibilities, UpdateSourceTrigger=PropertyChanged, TargetNullValue='отсутсвует'}" 
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                <ListBox.ItemContainerStyle>
                                    <Style>
                                        <Setter Property="ListBoxItem.Background" Value="AliceBlue"/>
                                        <Setter Property="ListBoxItem.Margin" Value="2"/>
                                        <Setter Property="ListBoxItem.Padding" Value="1"/>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Name,TargetNullValue='отсутсвует'}" TextWrapping="Wrap"/>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>



                <!--<DataGridTextColumn Header="Комментарий"
                    Width="50*" 
                    ElementStyle="{StaticResource WrapText}" 
                    HeaderStyle="{StaticResource WrapTextHeader}"/>-->
            </DataGrid.Columns>
        </DataGrid>


    </Grid>
</Window>
